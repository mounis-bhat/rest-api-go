{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A REST API for tracking workouts and managing users.",
        "title": "Workout Tracker API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/health": {
            "get": {
                "description": "Check if the API service is running and healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user account with username, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.registerUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/auth": {
            "post": {
                "description": "Authenticate a user with username and password and return an auth token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "schema": {
                            "$ref": "#/definitions/api.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid username or password",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a user's information by their username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to search for",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all users in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.UserResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No users found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing user's username, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.registerUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workouts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all workouts in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workouts"
                ],
                "summary": "Get all workouts",
                "responses": {
                    "200": {
                        "description": "List of workouts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.WorkoutResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new workout with exercises for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workouts"
                ],
                "summary": "Create a new workout",
                "parameters": [
                    {
                        "description": "Workout data",
                        "name": "workout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store.Workout"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Workout created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.WorkoutResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workouts/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific workout and its exercises by workout ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workouts"
                ],
                "summary": "Get workout by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workout details",
                        "schema": {
                            "$ref": "#/definitions/api.WorkoutResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid workout ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Workout not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing workout and its exercises (only by the owner)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workouts"
                ],
                "summary": "Update workout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated workout data",
                        "name": "workout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store.Workout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workout updated successfully",
                        "schema": {
                            "$ref": "#/definitions/api.WorkoutResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - not the owner",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Workout not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a workout by ID (only by the owner)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workouts"
                ],
                "summary": "Delete workout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Workout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Workout deleted successfully"
                    },
                    "400": {
                        "description": "Invalid workout ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - not the owner",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Workout not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Invalid request payload"
                }
            }
        },
        "api.TokenResponse": {
            "type": "object",
            "properties": {
                "auth_token": {
                    "description": "JWT authentication token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "email": {
                    "description": "Email address",
                    "type": "string",
                    "example": "john@example.com"
                },
                "id": {
                    "description": "User ID",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "Last update timestamp",
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "api.WorkoutEntryResponse": {
            "type": "object",
            "properties": {
                "duration_seconds": {
                    "description": "Duration in seconds",
                    "type": "integer",
                    "example": 60
                },
                "exercise_name": {
                    "description": "Name of the exercise",
                    "type": "string",
                    "example": "Push ups"
                },
                "id": {
                    "description": "Entry ID",
                    "type": "integer",
                    "example": 1
                },
                "notes": {
                    "description": "Additional notes",
                    "type": "string",
                    "example": "Good form maintained"
                },
                "order_index": {
                    "description": "Order of exercise in workout",
                    "type": "integer",
                    "example": 1
                },
                "reps": {
                    "description": "Number of repetitions",
                    "type": "integer",
                    "example": 15
                },
                "sets": {
                    "description": "Number of sets",
                    "type": "integer",
                    "example": 3
                },
                "weight": {
                    "description": "Weight in kg",
                    "type": "number",
                    "example": 75.5
                }
            }
        },
        "api.WorkoutResponse": {
            "type": "object",
            "properties": {
                "calories_burned": {
                    "description": "Calories burned",
                    "type": "integer",
                    "example": 350
                },
                "created_at": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "description": {
                    "description": "Workout description",
                    "type": "string",
                    "example": "High intensity cardio"
                },
                "duration_minutes": {
                    "description": "Duration in minutes",
                    "type": "integer",
                    "example": 45
                },
                "entries": {
                    "description": "List of workout exercises",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.WorkoutEntryResponse"
                    }
                },
                "id": {
                    "description": "Workout ID",
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "description": "Workout title",
                    "type": "string",
                    "example": "Morning Cardio"
                },
                "updated_at": {
                    "description": "Last update timestamp",
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "user_id": {
                    "description": "User ID who owns the workout",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "api.createTokenRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password for authentication",
                    "type": "string",
                    "example": "SecurePass123"
                },
                "username": {
                    "description": "Username for authentication",
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "api.registerUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "Email address for the new user",
                    "type": "string",
                    "example": "john@example.com"
                },
                "password": {
                    "description": "Password for the new user",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "SecurePass123"
                },
                "username": {
                    "description": "Username for the new user",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "example": "johndoe"
                }
            }
        },
        "store.Workout": {
            "type": "object",
            "properties": {
                "calories_burned": {
                    "description": "in kcal",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/store.WorkoutEntry"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "store.WorkoutEntry": {
            "type": "object",
            "properties": {
                "duration_seconds": {
                    "type": "integer"
                },
                "exercise_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "order_index": {
                    "type": "integer"
                },
                "reps": {
                    "type": "integer"
                },
                "sets": {
                    "type": "integer"
                },
                "weight": {
                    "description": "in kg",
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}